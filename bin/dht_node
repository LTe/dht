#!/usr/bin/env ruby
$LOAD_PATH << File.dirname(__FILE__)+'/..' << File.dirname(__FILE__)+'/../lib'

require 'bundler'
Bundler.setup
Bundler.require

require 'optparse'
require 'rack_ext'
require 'rack/server'
require 'dht/peer_server'
require 'dht/host_server'
require 'server/ui_server'

$log = $stderr
$log.sync = true

DefaultUrl = Addressable::URI.parse('http://localhost:3000').freeze

opts = OptionParser.new do |opts|
  opts.banner = <<BANNER
Distributed Hash Table (DHT) node

Usage:
    dht_node [options] [local_url] [peer_url ...]
    defaults:
      local_url: #{DefaultUrl}
BANNER
  opts.on( '-h', '--help', 'Show this.' ) { puts opts ; exit }
end
opts.parse!

url = Addressable::URI.parse(ARGV.shift) || DefaultUrl.dup
url.path = '/'  if url.path.blank?

node = DHT::Node.new url
for peer_url in ARGV
  node.peers.add DHT::Peer.new(peer_url)
end

Rack::Server.start(:server => 'thin', :Host => url.host, :Port => url.port, :app => Rack::Builder.new  do
  use Rack::Reloader
  use Rack::FiberPool
  use DHT::PeerServer, node
  use DHT::HostServer, node
  run DHT::UIServer.new(node)
end )
